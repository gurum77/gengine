.TH "Vector2d" 3 "Sat Dec 26 2015" "Version v0.1" "GEngine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Vector2d \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Triangulate\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVector2d\fP (float x, float y)"
.br
.ti -1c
.RI "float \fBGetX\fP (void) const "
.br
.ti -1c
.RI "float \fBGetY\fP (void) const "
.br
.ti -1c
.RI "void \fBSet\fP (float x, float y)"
.br
.ti -1c
.RI "\fBVector2d\fP (float x, float y)"
.br
.ti -1c
.RI "float \fBGetX\fP (void) const "
.br
.ti -1c
.RI "float \fBGetY\fP (void) const "
.br
.ti -1c
.RI "void \fBSet\fP (float x, float y)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Static class to triangulate any contour/polygon efficiently You should replace \fBVector2d\fP with whatever your own Vector class might be\&. Does not support polygons with holes\&. Uses STL vectors to represent a dynamic array of vertices\&. This code snippet was submitted to FlipCode\&.com by John W\&. Ratcliff (jratcliff@verant.com) on July 22, 2000 I did not write the original code/algorithm for this this triangulator, in fact, I can't even remember where I found it in the first place\&. However, I did rework it into the following black-box static class so you can make easy use of it in your own code\&. Simply replace \fBVector2d\fP with whatever your own Vector implementation might be\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Vector2d::Vector2d (float x, float y)\fC [inline]\fP"

.SS "Vector2d::Vector2d (float x, float y)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "float Vector2d::GetX (void) const\fC [inline]\fP"

.SS "float Vector2d::GetX (void) const\fC [inline]\fP"

.SS "float Vector2d::GetY (void) const\fC [inline]\fP"

.SS "float Vector2d::GetY (void) const\fC [inline]\fP"

.SS "void Vector2d::Set (float x, float y)\fC [inline]\fP"

.SS "void Vector2d::Set (float x, float y)\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for GEngine from the source code\&.
